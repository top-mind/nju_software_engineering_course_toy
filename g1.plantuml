@startuml 类图
class 嘉宾信息管理系统 {
  - 嘉宾信息录入模块
  - 证件制作和分发模块
  - 权限管理模块
  - 异常处理模块
  - 用车管理模块
  - 信息查看模块
}

class 嘉宾信息表 {
  - 嘉宾ID: int
  - 姓名: string
  - 单位: string
  - 职务: string
  - 联系方式: string
}

class 证件信息表 {
  - 证件ID: int
  - 嘉宾ID: int
  - 证件类型: string
  - 制作时间: date
  - 分发状态: string
}

class 用车信息表 {
  - 用车ID: int
  - 嘉宾ID: int
  - 车辆类型: string
  - 用车时间: date
}

嘉宾信息管理系统 --> 嘉宾信息表
嘉宾信息管理系统 --> 证件信息表
嘉宾信息管理系统 --> 用车信息表
@enduml

@startuml 用例图
actor 信息录入员
actor 证件制作员
actor 用车管理员
actor 嘉宾
actor 工作人员

usecase 信息录入
usecase 证件制作
usecase 证件分发
usecase 权限管理
usecase 用车管理
usecase 信息查看

信息录入员 --> 信息录入
证件制作员 --> 证件制作
证件制作员 --> 证件分发
用车管理员 --> 用车管理
嘉宾 --> 信息查看
工作人员 --> 信息查看

嘉宾信息管理系统 --> 信息录入
嘉宾信息管理系统 --> 证件制作
嘉宾信息管理系统 --> 证件分发
嘉宾信息管理系统 --> 权限管理
嘉宾信息管理系统 --> 用车管理
嘉宾信息管理系统 --> 信息查看
@enduml

@startuml 活动图
start
:信息录入;
:证件制作;
:证件分发;
:用车安排;
:信息查看;
stop
@enduml

@startuml 时序图
participant 信息录入员
participant 嘉宾信息管理系统
participant 数据库

信息录入员 -> 嘉宾信息管理系统: 输入嘉宾信息
嘉宾信息管理系统 -> 数据库: 保存嘉宾信息
数据库 --> 嘉宾信息管理系统: 返回保存结果
嘉宾信息管理系统 --> 信息录入员: 返回保存结果

信息录入员 -> 嘉宾信息管理系统: 请求制作证件
嘉宾信息管理系统 -> 数据库: 存储证件信息
数据库 --> 嘉宾信息管理系统: 返回制作结果
嘉宾信息管理系统 --> 信息录入员: 返回制作结果

信息录入员 -> 嘉宾信息管理系统: 请求分发证件
嘉宾信息管理系统 -> 数据库: 更新证件状态
数据库 --> 嘉宾信息管理系统: 返回分发结果
嘉宾信息管理系统 --> 信息录入员: 返回分发结果

信息录入员 -> 嘉宾信息管理系统: 请求用车安排
嘉宾信息管理系统 -> 数据库: 存储用车信息
数据库 --> 嘉宾信息管理系统: 返回安排结果
嘉宾信息管理系统 --> 信息录入员: 返回安排结果

信息录入员 -> 嘉宾信息管理系统: 请求查看信息
嘉宾信息管理系统 -> 数据库: 查询数据库
数据库 --> 嘉宾信息管理系统: 返回信息
嘉宾信息管理系统 --> 信息录入员: 返回信息
@enduml